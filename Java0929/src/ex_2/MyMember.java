/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ex_2;

import java.awt.CardLayout;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author youngsub.lee
 */
public class MyMember extends javax.swing.JFrame {

    // 1. 카드 레이아웃 객체를 선언
    private CardLayout card;

    private String rid, rpwd, rname, rbirth, remail;

    /**
     * Creates new form MyMember
     */
    public MyMember() {
        initComponents();
        // 2. 카드 레이아웃 객체를 생성
        card = (CardLayout) pp.getLayout();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pp = new javax.swing.JPanel();
        join = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        id = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        pwd = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        name = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        birth = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        email = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        listbtn = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        mlist = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listView = new javax.swing.JTextArea();
        searchValue = new javax.swing.JTextField();
        searchCombo = new javax.swing.JComboBox();
        searchBtn = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        pp.setLayout(new java.awt.CardLayout());

        join.setBackground(new java.awt.Color(255, 153, 102));

        jLabel1.setText("아이디 : ");

        id.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idActionPerformed(evt);
            }
        });

        jButton1.setText("중복검사");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel2.setText("비밀번호 : ");

        pwd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pwdActionPerformed(evt);
            }
        });

        jLabel3.setText("이름 : ");

        name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameActionPerformed(evt);
            }
        });

        jLabel4.setText("생년월일 : ");

        birth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                birthActionPerformed(evt);
            }
        });

        jLabel5.setText("이메일 : ");

        email.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emailActionPerformed(evt);
            }
        });

        jButton2.setText("가입");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        listbtn.setText("List");
        listbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listbtnActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("맑은 고딕", 1, 18)); // NOI18N
        jLabel6.setText("J D B C 중 복 검 사 체 크 기 능");

        javax.swing.GroupLayout joinLayout = new javax.swing.GroupLayout(join);
        join.setLayout(joinLayout);
        joinLayout.setHorizontalGroup(
            joinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, joinLayout.createSequentialGroup()
                .addContainerGap(124, Short.MAX_VALUE)
                .addGroup(joinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(joinLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pwd, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(joinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(joinLayout.createSequentialGroup()
                            .addComponent(jLabel3)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(name))
                        .addGroup(joinLayout.createSequentialGroup()
                            .addComponent(jLabel4)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(birth, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(joinLayout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(joinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(joinLayout.createSequentialGroup()
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(listbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(email, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(joinLayout.createSequentialGroup()
                        .addGroup(joinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel6)
                            .addGroup(joinLayout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(id, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)))
                .addGap(61, 61, 61))
        );
        joinLayout.setVerticalGroup(
            joinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(joinLayout.createSequentialGroup()
                .addContainerGap(45, Short.MAX_VALUE)
                .addComponent(jLabel6)
                .addGap(35, 35, 35)
                .addGroup(joinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addGap(18, 18, 18)
                .addGroup(joinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pwd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(joinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(joinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(birth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(joinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(email, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(joinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(listbtn))
                .addGap(89, 89, 89))
        );

        pp.add(join, "c1");

        mlist.setBackground(new java.awt.Color(255, 153, 102));

        listView.setColumns(20);
        listView.setRows(5);
        jScrollPane1.setViewportView(listView);

        searchValue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchValueActionPerformed(evt);
            }
        });

        searchCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "선택", "이름", "이메일", "아이디" }));

        searchBtn.setText("검색");
        searchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBtnActionPerformed(evt);
            }
        });

        jButton4.setText("jButton4");

        javax.swing.GroupLayout mlistLayout = new javax.swing.GroupLayout(mlist);
        mlist.setLayout(mlistLayout);
        mlistLayout.setHorizontalGroup(
            mlistLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mlistLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(mlistLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(mlistLayout.createSequentialGroup()
                        .addComponent(searchCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(searchValue, javax.swing.GroupLayout.PREFERRED_SIZE, 312, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(searchBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton4)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        mlistLayout.setVerticalGroup(
            mlistLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mlistLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 347, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(mlistLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchBtn)
                    .addComponent(jButton4))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        pp.add(mlist, "c2");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void idActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idActionPerformed

    }//GEN-LAST:event_idActionPerformed

    private void pwdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pwdActionPerformed

    }//GEN-LAST:event_pwdActionPerformed

    private void nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameActionPerformed

    }//GEN-LAST:event_nameActionPerformed

    private void birthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_birthActionPerformed

    }//GEN-LAST:event_birthActionPerformed

    private void emailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emailActionPerformed

    }//GEN-LAST:event_emailActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        execute();
        JOptionPane.showMessageDialog(this, "가입완료!");
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:\
        // Driver로딩, Connection, PreparedStatement, ResultSet 필요!
        // select count * from member where rid = ? 
        // con.preparedStatement
        String rid = id.getText().trim();
        int resNum = findresult(rid);
        String msg = "";
        if (resNum > 0) {
            msg = "이미 존재하는 아이디 입니다.";
            JOptionPane.showMessageDialog(this, msg);
            id.setText("");
            id.requestFocus(); // 포커스 이동
        } else {
            msg = "사용 가능한 아이디입니다.";
            JOptionPane.showMessageDialog(this, msg);
            pwd.requestFocus(); // 다음칸으로 포커스 이동
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void listbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listbtnActionPerformed
        // TODO add your handling code here:
        card.show(pp, "c2");
        getList();
    }//GEN-LAST:event_listbtnActionPerformed

    private void searchValueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchValueActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchValueActionPerformed

    private void searchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBtnActionPerformed
        // TODO add your handling code here:
        String sv = searchValue.getText().trim();
        String type = searchCombo.getSelectedItem().toString();
        String st = "";
        if (type.equals("이름")) {
            st = "rname";
        } else if (type.equals("이메일")) {
            st = "email";
        } else if (type.equals("아이디")) {
            st = "rid";
        }
        getSearch(sv, st);
    }//GEN-LAST:event_searchBtnActionPerformed

    public int findresult(String rid) {
        Connection con = null;
        PreparedStatement pstm = null;
        ResultSet rs = null;
        String url = "jdbc:oracle:thin:@localhost:1522/pdborcl";
        String user = "myman";
        String pwd = "new09";
        int resN = 0;
        try {
            con = DriverManager.getConnection(url, user, pwd);

            StringBuffer sb = new StringBuffer();
            sb.append("select count(*) cnt from member");
            sb.append(" where rid=?");
            pstm = con.prepareStatement(sb.toString());
            pstm.setString(1, rid);
            rs = pstm.executeQuery();

            if (rs.next()) {
                resN = rs.getInt("cnt");
            }
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
        return resN;
    }

    public void getList() {
        listView.setText("");
        Connection con = null;
        PreparedStatement pstm = null;
        ResultSet rs = null;
        try {
            // 1. 데이터베이스를 접속하기 위한 드라이버 로딩
            Class.forName("oracle.jdbc.driver.OracleDriver");
            System.out.println("드라이버 로딩성공!");
            // 2. Connection
            String url = "jdbc:oracle:thin:@localhost:1522/pdborcl";
            String user = "myman";
            String pass = "new09";

            con = DriverManager.getConnection(url, user, pass);
            // 3.SQL작성
            StringBuffer sql = new StringBuffer();
            sql.append("select * from member order by num asc");
            pstm = con.prepareStatement(sql.toString());

            rs = pstm.executeQuery();

            while (rs.next()) {
                listView.append("번호 : " + rs.getInt("num") + "\n");
                listView.append("아이디 : " + rs.getString("rid") + "\n");
                listView.append("이름 : " + rs.getString("rname") + "\n");
                listView.append("생년월일 : " + rs.getString("birth") + "\n");
                listView.append("이메일 : " + rs.getString("email") + "\n");
                listView.append("날짜 : " + rs.getDate("rdate") + "\n");
                listView.append("------------------------------------------");
            }
        } catch (ClassNotFoundException ex) {
            ex.printStackTrace();
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }

    // sv 검색 st 검색타입
    public void getSearch(String sv, String st) {
        System.out.println(sv + "," + st);
        listView.setText("");
        Connection con = null;
        PreparedStatement pstm = null;
        ResultSet rs = null;
        try {
            // 1. 데이터베이스를 접속하기 위한 드라이버 로딩
            Class.forName("oracle.jdbc.driver.OracleDriver");
            System.out.println("드라이버 로딩성공!");
            // 2. Connection
            String url = "jdbc:oracle:thin:@localhost:1522/pdborcl";
            String user = "myman";
            String pass = "new09";

            con = DriverManager.getConnection(url, user, pass);
            // 3.SQL작성
            StringBuffer sql = new StringBuffer();
            sql.append("select num,rid,rname,birth,email, ");
            sql.append("to_char(rdate, 'yyyy-mm-dd') rdate from member ");
            sql.append("where ").append(st).append(" like");
            sql.append(" ?");
            sql.append(" order by num asc");
            pstm = con.prepareStatement(sql.toString());
            pstm.setString(1, "%"+sv+"%");
            rs = pstm.executeQuery();

            while (rs.next()) {
                listView.append("번호 : " + rs.getInt("num") + "\n");
                listView.append("아이디 : " + rs.getString("rid") + "\n");
                listView.append("이름 : " + rs.getString("rname") + "\n");
                listView.append("생년월일 : " + rs.getString("birth") + "\n");
                listView.append("이메일 : " + rs.getString("email") + "\n");
                listView.append("날짜 : " + rs.getDate("rdate") + "\n");
                listView.append("------------------------------------------");
            }
        } catch (ClassNotFoundException ex) {
            ex.printStackTrace();
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }

    public void execute() {
        Connection con = null;
        PreparedStatement pstm = null; // 연결해주는 객체

        rid = id.getText().trim();
        rpwd = pwd.getText().trim();
        rname = name.getText().trim();
        rbirth = birth.getText().trim();
        remail = email.getText().trim();

        try {
            // 1. ojdbc로 부터 Driver로딩!
            Class.forName("oracle.jdbc.driver.OracleDriver");
            System.out.println("드라이버 로딩성공!");
            // 2. Connection 획득!

            String url = "jdbc:oracle:thin:@localhost:1522/pdborcl";
            String user = "myman";
            String pass = "new09";
            con = DriverManager.getConnection(url, user, pass);

            // 3. SQL문 작성!
            StringBuffer sql = new StringBuffer();
            sql.append("insert into member values(");
            sql.append("member_seq.nextVal,?,?,?,?,?,sysdate)");

            pstm = con.prepareStatement(sql.toString());

            // 5. 바인딩을 사용해서 전송된 쿼리에게 값을 전송
            pstm.setString(1, rid);
            pstm.setString(2, rpwd);
            pstm.setString(3, rname);
            pstm.setString(4, rbirth);
            pstm.setString(5, remail);

            //**************************
            pstm.executeUpdate();

        } catch (ClassNotFoundException ex) {
            System.out.println("드라이버 로딩실패!");
            ex.printStackTrace();
        } catch (SQLException ex) {
            System.out.println("오라클 에러발생 : ");
            ex.printStackTrace();
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MyMember.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MyMember.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MyMember.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MyMember.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MyMember().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField birth;
    private javax.swing.JTextField email;
    private javax.swing.JTextField id;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel join;
    private javax.swing.JTextArea listView;
    private javax.swing.JButton listbtn;
    private javax.swing.JPanel mlist;
    private javax.swing.JTextField name;
    private javax.swing.JPanel pp;
    private javax.swing.JTextField pwd;
    private javax.swing.JButton searchBtn;
    private javax.swing.JComboBox searchCombo;
    private javax.swing.JTextField searchValue;
    // End of variables declaration//GEN-END:variables
}
